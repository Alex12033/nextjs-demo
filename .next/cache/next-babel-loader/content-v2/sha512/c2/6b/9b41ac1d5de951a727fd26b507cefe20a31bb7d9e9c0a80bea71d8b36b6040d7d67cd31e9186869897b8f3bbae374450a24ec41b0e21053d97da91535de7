{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\NEXT JS\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n\nexport async function getStaticProps() {\n  const response = await fetch(\"/api/meetups\").then(res => {\n    if (res.ok) {\n      setLoader(false);\n      return res.json();\n    } else {\n      return res.json().then(data => {\n        throw new Error(\"Error in query\");\n      });\n    }\n  });\n  return {\n    props: {\n      meetups: response.map(meetup => ({\n        title: meetup.title,\n        adress: meetup.adress,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Александр/OneDrive/Робочий стіл/NEXT JS/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","response","fetch","then","res","ok","setLoader","json","data","Error","map","meetup","title","adress","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAL,CAAsBC,IAAtB,CAA4BC,GAAD,IAAS;AACzD,QAAIA,GAAG,CAACC,EAAR,EAAY;AACVC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KAHD,MAGO;AACL,aAAOH,GAAG,CAACG,IAAJ,GAAWJ,IAAX,CAAiBK,IAAD,IAAU;AAC/B,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,OAFM,CAAP;AAGD;AACF,GATsB,CAAvB;AAWA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEE,QAAQ,CAACS,GAAT,CAAcC,MAAD,KAAa;AACjCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADmB;AAEjCC,QAAAA,MAAM,EAAEF,MAAM,CAACE,MAFkB;AAGjCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHmB;AAIjCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ6B,OAAb,CAAb;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAerB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  const response = await fetch(\"/api/meetups\").then((res) => {\r\n    if (res.ok) {\r\n      setLoader(false);\r\n      return res.json();\r\n    } else {\r\n      return res.json().then((data) => {\r\n        throw new Error(\"Error in query\");\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetups: response.map((meetup) => ({\r\n        title: meetup.title,\r\n        adress: meetup.adress,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}