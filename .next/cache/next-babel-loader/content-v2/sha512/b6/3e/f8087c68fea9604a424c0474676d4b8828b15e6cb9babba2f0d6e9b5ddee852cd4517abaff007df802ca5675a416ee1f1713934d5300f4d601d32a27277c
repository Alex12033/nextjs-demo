{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\NEXT JS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction meetupId() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://yablyk.com/wp-content/uploads/2022/04/large-city.jpg\",\n    title: \"A first meetup\",\n    adress: \"Some Street 5, Some city\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://test:123@cluster0.ytg5u.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://test:123@cluster0.ytg5u.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedmeetups = await meetupsCollection.findOne({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    props: {\n      meetupData: meetups.map(meetup => ({\n        image: meetup.image,\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description\n      }))\n    }\n  };\n}\nexport default meetupId;","map":{"version":3,"sources":["C:/Users/Александр/OneDrive/Робочий стіл/NEXT JS/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","meetupId","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","selectedmeetups","findOne","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,QAAT,GAAoB;AAClB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAE,8DADT;AAEE,IAAA,KAAK,EAAE,gBAFT;AAGE,IAAA,MAAM,EAAE,0BAHV;AAIE,IAAA,WAAW,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEhB,QAAAA,QAAQ,EAAEe,MAAM,CAACN,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMjB,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,eAAe,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B,EAA1B,EAA8B;AAAEZ,IAAAA,GAAG,EAAE;AAAP,GAA9B,EAA0CC,OAA1C,EAA9B;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEhB,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AACnCS,QAAAA,KAAK,EAAET,MAAM,CAACS,KADqB;AAEnCC,QAAAA,EAAE,EAAEV,MAAM,CAACN,GAAP,CAAWQ,QAAX,EAF+B;AAGnCS,QAAAA,KAAK,EAAEX,MAAM,CAACW,KAHqB;AAInCC,QAAAA,OAAO,EAAEZ,MAAM,CAACY,OAJmB;AAKnCC,QAAAA,WAAW,EAAEb,MAAM,CAACa;AALe,OAAb,CAAZ;AADP;AADF,GAAP;AAWD;AAED,eAAe5B,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction meetupId() {\r\n  return (\r\n    <MeetupDetail\r\n      image={\"https://yablyk.com/wp-content/uploads/2022/04/large-city.jpg\"}\r\n      title={\"A first meetup\"}\r\n      adress={\"Some Street 5, Some city\"}\r\n      description={\"The meetup description\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://test:123@cluster0.ytg5u.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://test:123@cluster0.ytg5u.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedmeetups = await meetupsCollection.findOne({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: meetups.map((meetup) => ({\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n      })),\r\n    },\r\n  };\r\n}\r\n\r\nexport default meetupId;\r\n"]},"metadata":{},"sourceType":"module"}